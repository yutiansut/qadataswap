[build-system]
requires = [
    "setuptools>=60.0.0",
    "wheel",
    "pybind11>=2.10.0",
    "cmake>=3.16",
    "pyarrow>=10.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "qadataswap"
version = "0.1.0"
description = "High-performance cross-language zero-copy data transfer with Polars support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "QADataSwap Team"},
]
keywords = ["polars", "arrow", "shared-memory", "zero-copy", "ipc"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.8"
dependencies = [
    "pyarrow>=10.0.0",
    "polars>=0.18.0",
    "numpy>=1.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pybind11-stubgen>=0.10.0",
]
benchmark = [
    "psutil>=5.8.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.4.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/your-org/qadataswap"
Documentation = "https://qadataswap.readthedocs.io"
Repository = "https://github.com/your-org/qadataswap.git"
Issues = "https://github.com/your-org/qadataswap/issues"

[tool.setuptools]
package-dir = {"" = "src/python"}
zip-safe = false

[tool.setuptools.packages.find]
where = ["src/python"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    "src/python/tests",
]
python_files = ["test_*.py", "*_test.py"]